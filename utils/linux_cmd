copy first N files from a directory to another
    find "src_dir" -maxdepth 1 -type f | head -N | xargs cp -t "des_dir"
    
list first N lines in a file
    head -N xxx.xxx
    
count number of lines in a file
    wc -l xxx.xxx
    
list first N files in a directory
    ls dir | head -N

get the size of a file
    du -h file

get the size of a directory
    du -sh file_path
    
get the free space in the disk
    df -h
    
mount and unmount a disk
    sudo fdisk -l   
    mount -o rw src/ des/
    umount src/

make a softlink to file/folder
    ln -s /path/to/fileorfolder /path/to/symlink

search for occurance in a file
	grep [options] pattern [file]
	[options] -n: show line numbers
			  -c: show number of lines containing the matching pattern

zip and unzip data
	zip -r des_zip src_dir/
	unzip des_zip

tar data
	archive: tar -cvf des.tar src_dir/
	extract: tar -xvf des.tar
	extract .tgz file: tar -zxvf des.tgz

install samba (ubuntu&windows)
step1:
    sudo apt install samba
    sudo apt install smbclient
step2:
    sudo vi /etc/samba/smb.conf
    (add to the end of file, xxx means the user of shared folder)
    [xxx]
    comment = Share Folder require password
    browseable = yes
    path = /home/xxx
    create mask = 0777
    directory mask = 0777
    valid users = xxx
    public = yes
    writable = yes
    available = yes
step3:
    sudo /etc/init.d/samba restart
step4:
    (under /home directory)
    sudo mkdir xxx
    sudo chmod 777 xxx
step5:
    (add account)
    sudo groupadd xxx -g 6000
    sudo useradd xxx -g 6000  -d /home/xxx
    sudo passwd xxx
    sudo usermod -aG users xxx
    sudo smbpasswd -a xxx
step6:
    (now go to windows: add a network location)
    \\ip_address\xxx

shutdown os at set time
    sudo shutdown -h 22:00

find specific file by name or extension
    find /dir/path -name "*.jpg"

configure git lfs
    1. install git lfs
    2. set up: git lfs install
    3. add big file extensions to track: git lfs track "*.h5"
    4. make sure .gitattributes is tracked: git add .gitattributes
    5. use git as usual

ubuntu: copy from one server to another:
    scp [-r] src_file/src_dir <username>@<ip>:des/path/

jupyter: run from a remote server
    on remote server:
        jupyter notebook --no-browser --port=8889
    on local machine:
        ssh -N -f -L localhost:8888:localhost:8889 username@<ip>
    run on local browser:
        localhost:8888

linux: live watch gpu usage, every 1 second
    watch -n 1 nvidia-smi

find and copy files from src_dir to des_dir
    find src_dir/ -type f -name "*.txt" | xargs cp -t des_dir/
    find src_dir/ -type f -name "*.txt" | xargs -0 -I file cp file des_dir/
    find src_dir/ -type f -name "*.txt" | xargs -0 -I {} cp {} des_dir/

grep: find certain str in a file/files
    grep --color -n pattern file
    grep --color -n -r pattern files

configure shadowsocks on ubuntu (use as client)
    #https://www.linuxbabe.com/desktop-linux/how-to-install-and-use-shadowsocks-command-line-client
    pip install shadowsocks
    #locate sslocal, results should be /usr/local/bin/sslcoal
        whereis sslocal
    #create a configuration file
        sudo vim /etc/shadowsocks.json
    #input the following into shadowsocks.json
    {
        "server":"server-ip",
        "server_port":8000,
        "local_address": "127.0.0.1",
        "local_port":1080,
        "password":"your-password",
        "timeout":600,
        "method":"aes-256-cfb"
    }
    #start the client
        sslocal -c /etc/shadowsocks.json
    #run in the background
        sudo sslocal -c /etc/shadowsocks.json -d start
    #stop it
        sudo sslocal -c /etc/shadowsocks.json -d stop
    #we can also auto start the client on system boot
    #edit /etc/rc.local file
        sudo vim /etc/rc.local
    #put the following line above the "exit 0" line
        sudo sslocal -c /etc/shadowsocks.json -d start
    #check if it works, after rebooting the computer
        sudo systemctl status rc-local.service
    #if sslocal command works, then should get some output like this
        ● rc-local.service - /etc/rc.local Compatibility
           Loaded: loaded (/lib/systemd/system/rc-local.service; static; vendor preset: enabled)
          Drop-In: /lib/systemd/system/rc-local.service.d
                   └─debian.conf
           Active: active (running) since 三 2018-09-05 21:47:15 CST; 1min 9s ago
          Process: 3528 ExecStart=/etc/rc.local start (code=exited, status=0/SUCCESS)
         Main PID: 3772 (sslocal)
            Tasks: 1
           Memory: 22.0M
              CPU: 100ms
           CGroup: /system.slice/rc-local.service
                   └─3772 /usr/bin/python /usr/local/bin/sslocal -c /etc/shadowsocks.json -d start
    #run this to test the client setup
        http_proxy=socks5://127.0.0.1:1080 curl myip.ipip.net

configure vim settings on ubuntu
    sudo vim ~/.vimrc
    #input the following to the file
        set tabstop=4
        set shiftwidth=4
        set expandtab
        set number
        set mouse=nicr
        set autoindent